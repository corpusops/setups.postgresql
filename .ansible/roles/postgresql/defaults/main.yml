---
corpusops_core_projects_path: /srv/projects
cops_postgresql__privs: []
cops_postgresql__databases: []
cops_postgresql__roles: []
cops_postgresql_conf: []
#- max_connections = 80
#- work_mem = 96MB
#- default_statistics_target = 50
#- shared_buffers = 3840MB
#- maintenance_work_mem = 960MB
#- effective_cache_size = 11GB
#- checkpoint_completion_target = 0.9
#- constraint_exclusion = on
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
cops_postgresql__supereditors_paths: [
  "{{ cops_postgresql_project_root }}",
  "{{ cops_postgresql_data_root }}",
  /var, /home, /opt, /srv]
cops_postgresql__supereditors: >-
  {{ ansible_env.get('SUPEREDITORS', '') | copsf_splitstrip | to_json }}
cops_postgresql_supereditors_paths: "{{cops_postgresql__supereditors_paths}}"
cops_postgresql_supereditors: "{{cops_postgresql__supereditors}}"
cops_postgresql_do_install_postgis: |-
  {% set e = ansible_env.get('COPS_IMG', '') %}
  {% if 'postgis' in e %}True{% else %}False{% endif %}
cops_postgresql_version: |-
  {% set v = '{0}'.format(
    ansible_env.get(
      'COPS_IMGVER',
      corpusops_services_db_postgresql_vars.version)
  )[:3] %}{{v}}
cops_postgresql_deb_packages: []
cops_postgresql_rh_packages: []
# extra conf to add to pgconf (directly added to a tuning conf file (string))
cops_postgresql_sysctls: []
#- kernel.shmmax: 1106127360
## 1024 * shmmax / 4096
#- kernel.shmall: 276531840
cops_postgresql_domain: "{{ansible_fqdn}}"
cops_postgresql_name: 'postgresql'
cops_postgresql_user: "{{cops_postgresql_name}}-user"
cops_postgresql_group: "{{cops_postgresql_name}}-group"
cops_postgresql_projects_dir: '{{corpusops_vars.projects_path}}'
cops_postgresql_project_dir: '{{cops_postgresql_projects_dir}}/{{cops_postgresql_name}}'
cops_postgresql_project_root: "{{cops_postgresql_project_dir}}/project"
cops_postgresql_data_root: "{{cops_postgresql_project_dir}}/data"
cops_postgresql_cfg: "{{cops_postgresql_data_root}}/config"
cops_postgresql_fixperms: "{{cops_postgresql_project_dir}}/fixperms.sh"
cops_postgresql_fixperms_cron_periodicity: "0 */2 * * *"
#cops_postgresql_fixperms_cron_periodicity: ""
cops_postgresql_fixperms_cron: "/etc/cron.d/{{cops_postgresql_name}}-fixperms"
# overrides this dir with values of cops_postgresql_env !
cops_postgresql_env_overrides: {}
cops_postgresql_env: {}
#  PGPASSWORD: foobar
cops_postgresql_postgresql_bind_host: '127.0.0.1'
# templates
## entry point
cops_postgresql_ep_template: "../templates/app_entry_point"
# entrypoint settings
cops_postgresql_ep_playbook: "site.yml"
cops_postgresql_ep_skip_tags: "{{(
  'postgresql_users,'
  'postgresql_first_fixperms,'
  'postgresql_prerequisites,'
  'postgresql_do_setup,'
  'postgresql_workers,'
  'postgresql_entry_point,'
  'postgresql_manage_content,'
  'postgresql_end_fixperms'
  )}}"
cops_postgresql_ep_post_start_skip_tags: "{{(
  'postgresql_users,'
  'postgresql_first_fixperms,'
  'postgresql_prerequisites,'
  'postgresql_do_setup,'
  'postgresql_entry_point'
  )}}"
cops_postgresql_ep_main_ep: "/entry_point"
# service
cops_postgresql_service: "postgresql"
cops_postgresql_services:
- "{{cops_postgresql_service}}"
cops_postgresql_reconfigure_services:
- "post-start-{{cops_postgresql_service}}"
cops_postgresql_rhandlers: ["restart_cops_{{cops_postgresql_service}}"]
cops_postgresql_activated: true
cops_postgresql_stickymode: "2"
#
cops_postgresql_files:
  - {path: "{{cops_postgresql_projects_dir}}",
     owner: root, group: root, state: directory}
  - {path: "{{cops_postgresql_project_dir}}",
     owner: root, group: root, state: directory}
  - {path: "{{cops_postgresql_project_root}}",
     owner: "{{cops_postgresql_user}}", group: "{{cops_postgresql_group}}",
     state: directory, mode: "{{cops_postgresql_stickymode}}755"}
  - {path: "{{cops_postgresql_data_root}}",
     owner: "{{cops_postgresql_user}}", group: "{{cops_postgresql_group}}",
     state: directory, mode: "{{cops_postgresql_stickymode}}755"}
  - {path: "{{cops_postgresql_cfg}}",
     owner: "{{cops_postgresql_user}}", group: "{{cops_postgresql_group}}",
     state: directory, mode: "{{cops_postgresql_stickymode}}755"}
cops_postgresql_reconfigure: "{{cops_postgresql_project_dir}}/reconfigure.sh"
cops_postgresql_reconfigure_passenv: "ANSIBLE_PLAY ANSIBLE_FOLDER"
cops_postgresql_configs:
  # script to reconfigure image before and after systemd is launched
  - {src: "../templates/reconfigure.sh",
     dest: "{{cops_postgresql_reconfigure}}",
     mode: "0755",
     owner: "root",
     group: "root"}
  - {src: "../templates/post-start-reconfigure.service",
     dest: "/etc/systemd/system/post-start-{{cops_postgresql_service}}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "../templates/optim.conf",
     dest: "/etc/postgresql/{{cops_postgresql_version}}/main/conf.d/optim.conf",
     mode: "0644",
     owner: "root",
     group: "root"}
cops_postgresql_fixperms_configs:
  - {src: "../templates/fixperms.sh",
     dest: "{{cops_postgresql_fixperms}}", mode: "0755",
     owner: root, group: root}
cops_postgresql_ep_configs:
  - {src: "{{cops_postgresql_ep_template}}",
     dest: "/app_entry_point", mode: "0755",
     owner: root, group: root}
# vim:set ft=sls:
