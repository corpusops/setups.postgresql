---
- tags: [cops_postgresql_s_prerequisites_pkgs]
  when: [cops_postgresql_s_prerequisites_pkgs]
  block:
  - name: update & install prerequisites
    package:
      cache_valid_time: '{{60*60}}'
      update_cache: yes
      name: '{{item}}'
      state: present
    when: "(ansible_os_family.lower() in ['debian'] and
            cops_postgresql_vars.deb_packages is not none and
            cops_postgresql_vars.deb_packages|length > 0)"
    loop: "{{cops_postgresql_vars.deb_packages}}"
  - name: update & install prerequisites
    package:
      update_cache: yes
      enablerepo: epel,epel-testing
      name: '{{item}}'
      state: present
    when: "(ansible_os_family.lower() in ['redhat'] and
            cops_postgresql_vars.rh_packages is not none and
            cops_postgresql_vars.rh_packages|length > 0)"
    loop: "{{cops_postgresql_vars.rh_packages}}"

# Setup/Install postgresql
- include_role: {name: "corpusops.roles/services_db_postgresql"}
  vars:
    corpusops_services_db_postgresql_do_preprequisites: true
    corpusops_services_db_postgresql_do_configuration: false
    corpusops_services_db_postgresql_do_wrappers: false
    corpusops_services_db_postgresql_do_services: false
    corpusops_services_db_postgresql_do_fix_encoding: false
  tags: [cops_postgresql_s_prerequisites_postgresql]
  when: [cops_postgresql_s_prerequisites_postgresql]

# Setup/Install postgis
- include_role: {name: "corpusops.roles/services_db_postgis"}
  when:
  - "cops_postgresql_vars.do_install_postgis"
  - "cops_postgresql_s_prerequisites_postgis"
  tags: [cops_postgresql_s_prerequisites_postgis]
  vars:
    corpusops_services_db_postgis_do_prerequisistes: true
    corpusops_services_db_postgis_do_configuration: false
    corpusops_services_db_postgis_do_postgis: false

